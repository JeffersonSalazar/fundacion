/*
    section_gallery
*/
.section_gallery {
	/*
		container_gallery
    */
	.container_gallery {
		/*
            grid_gallery: definimos display: grid para crear la
			galería de imágenes
        */
		.grid_gallery {
			display: grid;

			/*
				_@query 992px ==> : para esta medida definimos
				_4 columnas y 2 filas
			*/
			@media (min-width: 992px) {
				grid-template-columns: repeat(4, 1fr);
				grid-template-rows: repeat(2, 397px);
			}

			/*
				_@query 991px <== : para esta medida definimos
				_2 columnas y 4 filas
			*/
			@media (max-width: 991px) {
				grid-template-columns: repeat(2, 1fr);
				grid-template-rows: repeat(4, 397px);
			}

			/*
				_@query 767px <== : para esta medida definimos
				_1 columna y 7 filas
			*/
			@media (max-width: 767px) {
				grid-template-columns: repeat(1, 1fr);
				grid-template-rows: 160px repeat(7, 307px);
			}

			/*
				_@query 499px <== : para esta medida solamente
				_cambiamos la altura de las filas
			*/
			@media (max-width: 499px) {
				grid-template-rows: 160px repeat(7, 180px);
			}

			/*
				box_title_gallery: definimos flexbox y sus propiedades
				justify-content y align-items para centrar de manera
				horizontal y vertical los elementos que este contiene
			*/
			.box_title_gallery {
				display: flex;
				flex-direction: column;
				justify-content: center;
				align-items: center;
				text-align: center;
				background-color: #2f425b;
				color: #fff;
				line-height: 1;
				
				/*
					.tag-h3: seleccionamos el primer elemento haciendo uso
					.del pseudo elemento :nth-child()
				*/
				h3:nth-child(1) {
					font-family: '@nunito-regular', sans-serif;
					font-size: 40px;
					font-weight: 400;
				}
				
				/*
					.tag-h3: seleccionamos el segundo elemento haciendo uso
					.del pseudo elemento :nth-child()
				*/
				h3:nth-child(2) {
					font-family: '@sansation-bold', sans-serif;
					font-size: 40px;
				}
			}

			/*
				box_gallery: definimos position: relative ya que uno
				de sus elementos hijo tiene definido position: absolute
			*/
			.box_gallery {
				position: relative;

				/*
					content_gallery: definimos position: absolute y sus propiedades 
					top, left right y bottom para que este elemento tome el ancho y
					alto total de su contenedor padre
				*/
				.content_gallery {
					position: absolute;
					top: 0;
					left: 0;
					right: 0;
					bottom: 0;
					font-family: '@sansation-bold', sans-serif;
					color: #fff;
					background-color: rgba(0, 0, 0, 0.5);
					padding: 20px 15px;

					/*
						_@query 768px ==> : definimos flexbox y sus
						_propiedades flex-direction y justify-content
						_para separar los elementos entre si
					*/
					@media (min-width: 768px) {
						display: flex;
						flex-direction: column;
						justify-content: space-between;
						cursor: pointer;

						/*
							.cuando hacemos :hover sobre content_gallery
							.añadimos un background en gradiente
						*/
						&:hover {
							background: rgb(2, 0, 36);
							background: linear-gradient(
								0deg,
								rgba(0, 0, 0, 0.9) 20%,
								rgba(83, 25, 7, 0.8) 60%,
								rgba(0, 0, 0, 0.9) 90%
							);
						}

						/*
							.cuando hacemos :hover sobre content_gallery relacionamos a 
							.tag-p y añadimos opacity: 1 para que este sea visible
							.nuevamente
						*/
						&:hover p {
							opacity: 1;
							transition: opacity 1.5s ease;
						}

						/*
							.cuando hacemos :hover sobre content_gallery relacionamos a 
							.btn_gallery y añadimos opacity: 1 para que este sea visible
							.nuevamente
						*/
						&:hover .btn_gallery {
							opacity: 1;
							transition: opacity 1.5s ease;
						}
					}

					/*
						content_iconPlus: (contenedor icon-plus)
					*/
					.content_iconPlus {
						/*
							_@query 767px <== : definimos inline-flex que 
							_nos permite implementar propiedades flexbox
							_que junto a width y height nos permiten
							_centrar el icono definido dentro de la tag-a 
							_finalmente definimos position: absolute y sus
							_propiedades top, right y z-index que nos permite
							_posicionar y fijar el elemento
						*/
						@media (max-width: 767px) {
							display: inline-flex;
							width: 40px;
							justify-content: center;
							height: 40px;
							align-items: center;
							position: absolute;
							top: 0;
							right: 12px;
							z-index: 5;
							background-color: #fff;

							/*
								tag-svg: (icon-plus)
							*/
							svg {
								fill: #ff671b;
								width: 24px;
								height: 24px;
							}
						}

						/*
							_@query 768px ==> : definimos display: none
							_para remover este elemento de la maqueta en
							_esta medida
						*/
						@media (min-width: 768px) {
							display: none;
						}
					}

					/*
						tag-h3
					*/
					h3 {
						font-size: 40px;
						line-height: 1;

						/*
							_@query 1199px <== : cambiamos el tamaño
							_de la fuente para esta medida
						*/
						@media (max-width: 1199px) {
							font-size: 30px;
						}
					}

					/*
						tag-p
					*/
					p {
						/*
							_@query 767px <== : definimos display: none
							_para remover este elemento de la maqueta en
							_esta medida
						*/
						@media (max-width: 767px) {
							display: none;
						}

						/*
							_@query 768px ==> : definimos opacity: 0 para 
							_desaparecer el texto que aparece nuevamente 
							_cuando hacemos :hover sobre content_gallery
						*/
						@media (min-width: 768px) {
							opacity: 0;
							font-size: 14px;
							letter-spacing: 0.1px;
							line-height: 1.4;
						}
					}

					/*
						btn_gallery
					*/
					.btn_gallery {
						/*
							_@query 767px <== : definimos display: none
							_para remover este elemento de la maqueta en
							_esta medida
						*/
						@media (max-width: 767px) {
							display: none;
						}

						/*
							_@query 768px ==> : definimos opacity: 0 para 
							_desaparecer el botón que aparece nuevamente 
							_cuando hacemos :hover sobre content_gallery, 
							_la propiedad inline-flex nos permite implementar 
							_propiedades flexbox que junto a width y height 
							_nos permiten centrar el texto del botón 
							_finalmente con align-self posicionamos el botón al 
							_final de su contenedor
						*/
						@media (min-width: 768px) {
							opacity: 0;
							text-decoration: none;
							display: inline-flex;
							width: 115px;
							justify-content: center;
							height: 35px;
							align-items: center;
							align-self: flex-end;
							color: #fff;
							font-family: '@sansation-regular', sans-serif;
							font-size: 14px;
							border: 1px solid #fff;
						}
					}
				}

				/*
					tag-img: definimos vertical-align para remover un espaciado
					que genera el navegador en las imágenes, finalmente un width 
					y height 100% mas un object-fit para que la imagen se ajuste
					al tamaño de su contenedor
				*/
				img {
					vertical-align: top;
					width: 100%;
					height: 100%;
					object-fit: cover;
				}

				/*
					img_gallery_destok
				*/
				.img_gallery_destok {
					/*
						_@query 767px <== : definimos display: none
						_para remover este elemento de la maqueta en
						_esta medida
					*/
					@media (max-width: 767px) {
						display: none;
					}
				}

				/*
					img_gallery_movil
				*/
				.img_gallery_movil {
					/*
						_@query 768px ==> : definimos display: none
						_para remover este elemento de la maqueta en
						_esta medida
					*/
					@media (min-width: 768px) {
						display: none;
					}
				}
			}
		}
	}
}
