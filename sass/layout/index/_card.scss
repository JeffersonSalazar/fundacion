/*
	importacion de las fuentes
*/
// @import '../shared/fonts';

/*
	section_name: le podemos definir margenes o espaciados
	cuando queremos separar esta seccion de otra 
*/
.section_card {
	padding: 60px 0;

	/*
		container_name: es el encargado de manejar el 
		responsive a travez de la propiedad width
	*/
	.container_card {
		max-width: 100%;
		margin: 0 auto;

		@media (min-width: 768px) {
			max-width: 720px;
    		padding: 0 15px;
		}

		@media (min-width: 992px) {
			max-width: 960px;
		}

		@media (min-width: 1200px) {
			max-width: 1140px;
		}

		/*
			box_boid: es importante definir un height a este contenedor
			para que genere el espaciado que nos ayuda a solucionar 
			el problema de desmaquetado, el valor de este depende de
			la posicion inicial de la targeta
		*/
		.box_void {
			// background-color: orange;

			@media (max-width: 991px) {
				height: 245px;
			}

			@media (max-width: 440px) {
				height: 265px;
			}
		}

		/*
			flexbox_name
		*/
		.flexbox_card {
			position: relative;

			/*
				@query 991px ==> : definimos position: relative para 
				solucionar el problema que genera definir absolute
				en un elemento hijo, finalmente implementamos
				flexbox con su propeidad align-items mas un height
				que le da altura a la caja permitiendo centrar las
				cajas verticalmente
			*/
			@media (min-width: 992px) {
				display: flex;
				height: 440px;
				align-items: center;
			}

			/*
				box_name: definimos position: absolute con su
				propiedad top que nos permiten posicionar la
				caja, tambien definimos flexbox y su 
				propiedad align-items que nos permite centrar 
				su contenido verticalmente. Finalmente un width 
				que nos ayuda a darle tamaño a esta caja
			*/
			.box_card {
				display: flex;
				align-items: center;

				@media (min-width: 992px) {
					width: 700px;
					height: 100%;
					background: linear-gradient(0deg, #ff9a7e, rgba(230, 139, 113, 0.84));
				}

				@media (max-width: 1200px) {
					width: 675px;
				}

				@media (max-width: 991px) {
					position: absolute;
					top: -245px;
					justify-content: center;
					width: 100%;
				}

				@media (max-width: 440px) {
					top: -265px;
				}

				/*
					content_card
				*/
				.content_card {
					text-align: center;

					@media (max-width: 991px) {
						background: linear-gradient(
							0deg,
							#ff9a7e,
							rgba(230, 139, 113, 0.84)
						);
						width: 92%;
					}

					@media (max-width: 991px) {
						width: 90%;
						padding: 40px 0;
					}

					@media (max-width: 767px) {
						width: 90%;
						padding: 40px 15px;
					}

					@media (min-width: 992px) {
						width: calc(700px - 260px);
					}

					@media (min-width: 1200px) {
						width: calc(675px - 295px);
					}

					h4 {
						color: #313338;
						font-size: 44px;
						font-family: '@nunito-light', sans-serif;
						letter-spacing: 0;

						@media (max-width: 767px) {
							font-size: 34px;
						}
					}

					h3 {
						color: #313338;
						font-size: 45px;
						font-family: '@sansation-bold', sans-serif;

						@media (max-width: 767px) {
							font-size: 35px;
						}

						i {
							font-family: '@sansation-light', sans-serif;
						}
					}

					a {
						text-decoration: none;
						display: inline-flex;
						width: 220px;
						justify-content: center;
						height: 54px;
						align-items: center;
						font-size: 14px;
						font-family: '@sansation-bold', sans-serif;
						letter-spacing: 0.3px;
						background-color: #fff;
						color: #ff671b;
						border-radius: 2px;
						margin-top: 40px;
						cursor: pointer;
						transition: all 0.3s;

						&:hover {
							background-color: #ff671b;
							color: #fff;
						}
					}
				}
			}

			/*
				box_name_img: es importante definirle a un contenedor
				la propiedad height si este contiene dentro una tag-img
				para luego ajustar la imagen al tamaño del contenedor
			*/
			.box_card_img {

				@media (max-width: 480px) {
					height: 260px;
				}

				@media (min-width: 768px) {
					width: 690px;
    				height: 415px;
				}

				/*
					@query 900px ==> : cambiamos el height del contenedor
					box_name_img
				*/
				@media (min-width: 992px) {
					position: absolute;
					right: 0;
					width: 490px;
				}

				@media (min-width: 1200px) {
					width: 730px;
				}

				/*
					tag-img: es importante definir el width y height 
					de la img a 100% y object-fit: cover para que esta 
					se ajuste al tamaño de su contenedor
				*/
				img {
					vertical-align: top;
					width: 100%;
					height: 100%;
					object-fit: cover;
				}
			}
		}
	}
}
